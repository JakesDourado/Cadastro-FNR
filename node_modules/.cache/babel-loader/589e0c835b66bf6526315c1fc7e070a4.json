{"ast":null,"code":"const DB_KEY = 'products_db';\nexport const db = {\n  // Salvar todos os produtos\n  saveProducts(products) {\n    localStorage.setItem(DB_KEY, JSON.stringify(products));\n  },\n\n  // Obter todos os produtos\n  getProducts() {\n    const products = localStorage.getItem(DB_KEY);\n    return products ? JSON.parse(products) : [];\n  },\n\n  // Adicionar um novo produto\n  addProduct(product) {\n    const products = this.getProducts();\n    const newProduct = { ...product,\n      id: Date.now().toString() // Gerando um ID único baseado no timestamp\n\n    };\n    products.push(newProduct);\n    this.saveProducts(products);\n    return newProduct;\n  },\n\n  // Atualizar um produto existente\n  updateProduct(id, updatedProduct) {\n    const products = this.getProducts();\n    const index = products.findIndex(p => p.id === id);\n\n    if (index !== -1) {\n      products[index] = { ...products[index],\n        ...updatedProduct\n      };\n      this.saveProducts(products);\n      return products[index];\n    }\n\n    return null;\n  },\n\n  // Deletar um produto\n  deleteProduct(id) {\n    const products = this.getProducts();\n    const filteredProducts = products.filter(p => p.id !== id);\n    this.saveProducts(filteredProducts);\n  }\n\n};","map":{"version":3,"sources":["/Users/jakesmac/Downloads/ReactJS-cadastro-master 2/cadastro-front/src/services/db.js"],"names":["DB_KEY","db","saveProducts","products","localStorage","setItem","JSON","stringify","getProducts","getItem","parse","addProduct","product","newProduct","id","Date","now","toString","push","updateProduct","updatedProduct","index","findIndex","p","deleteProduct","filteredProducts","filter"],"mappings":"AAAA,MAAMA,MAAM,GAAG,aAAf;AAEA,OAAO,MAAMC,EAAE,GAAG;AACd;AACAC,EAAAA,YAAY,CAACC,QAAD,EAAW;AACnBC,IAAAA,YAAY,CAACC,OAAb,CAAqBL,MAArB,EAA6BM,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA7B;AACH,GAJa;;AAMd;AACAK,EAAAA,WAAW,GAAG;AACV,UAAML,QAAQ,GAAGC,YAAY,CAACK,OAAb,CAAqBT,MAArB,CAAjB;AACA,WAAOG,QAAQ,GAAGG,IAAI,CAACI,KAAL,CAAWP,QAAX,CAAH,GAA0B,EAAzC;AACH,GAVa;;AAYd;AACAQ,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,UAAMT,QAAQ,GAAG,KAAKK,WAAL,EAAjB;AACA,UAAMK,UAAU,GAAG,EACf,GAAGD,OADY;AAEfE,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,GAAWC,QAAX,EAFW,CAEW;;AAFX,KAAnB;AAIAd,IAAAA,QAAQ,CAACe,IAAT,CAAcL,UAAd;AACA,SAAKX,YAAL,CAAkBC,QAAlB;AACA,WAAOU,UAAP;AACH,GAtBa;;AAwBd;AACAM,EAAAA,aAAa,CAACL,EAAD,EAAKM,cAAL,EAAqB;AAC9B,UAAMjB,QAAQ,GAAG,KAAKK,WAAL,EAAjB;AACA,UAAMa,KAAK,GAAGlB,QAAQ,CAACmB,SAAT,CAAmBC,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASA,EAAjC,CAAd;;AACA,QAAIO,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdlB,MAAAA,QAAQ,CAACkB,KAAD,CAAR,GAAkB,EAAE,GAAGlB,QAAQ,CAACkB,KAAD,CAAb;AAAsB,WAAGD;AAAzB,OAAlB;AACA,WAAKlB,YAAL,CAAkBC,QAAlB;AACA,aAAOA,QAAQ,CAACkB,KAAD,CAAf;AACH;;AACD,WAAO,IAAP;AACH,GAlCa;;AAoCd;AACAG,EAAAA,aAAa,CAACV,EAAD,EAAK;AACd,UAAMX,QAAQ,GAAG,KAAKK,WAAL,EAAjB;AACA,UAAMiB,gBAAgB,GAAGtB,QAAQ,CAACuB,MAAT,CAAgBH,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASA,EAA9B,CAAzB;AACA,SAAKZ,YAAL,CAAkBuB,gBAAlB;AACH;;AAzCa,CAAX","sourcesContent":["const DB_KEY = 'products_db';\n\nexport const db = {\n    // Salvar todos os produtos\n    saveProducts(products) {\n        localStorage.setItem(DB_KEY, JSON.stringify(products));\n    },\n\n    // Obter todos os produtos\n    getProducts() {\n        const products = localStorage.getItem(DB_KEY);\n        return products ? JSON.parse(products) : [];\n    },\n\n    // Adicionar um novo produto\n    addProduct(product) {\n        const products = this.getProducts();\n        const newProduct = {\n            ...product,\n            id: Date.now().toString() // Gerando um ID único baseado no timestamp\n        };\n        products.push(newProduct);\n        this.saveProducts(products);\n        return newProduct;\n    },\n\n    // Atualizar um produto existente\n    updateProduct(id, updatedProduct) {\n        const products = this.getProducts();\n        const index = products.findIndex(p => p.id === id);\n        if (index !== -1) {\n            products[index] = { ...products[index], ...updatedProduct };\n            this.saveProducts(products);\n            return products[index];\n        }\n        return null;\n    },\n\n    // Deletar um produto\n    deleteProduct(id) {\n        const products = this.getProducts();\n        const filteredProducts = products.filter(p => p.id !== id);\n        this.saveProducts(filteredProducts);\n    }\n}; "]},"metadata":{},"sourceType":"module"}